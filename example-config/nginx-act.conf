# Uncomment to redirect from http to https (and remove "listen 80" in the next section
# Redirect to https://
#server {
#    server_tokens off;
#    listen 80 default_server;
#    listen [::]:80 default_server;
#    server_name <servername>;
#    return 301 https://$host$request_uri;
#}

# Main server, exposing static pages, nifi and swagger
server {
    listen 80 default_server;
    # listen 443 ssl http2 default_server;
    server_tokens off;

    # Uncomment to use http auth
    # auth_basic "Enter username/password";
    # auth_basic_user_file /etc/nginx/htpasswd.users;

    server_name  _;
    root /usr/share/nginx/frontend;

    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header Referrer-Policy "strict-origin" always;
    add_header Feature-Policy "geolocation none;midi none;notifications none;push none;sync-xhr none;microphone none;camera none;magnetometer none;gyroscope none;speaker self;vibrate none;fullscreen self;payment none;";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://ssl.google-analytics.com ; img-src 'self' https://ssl.google-analytics.com ; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com ; font-src 'self' https://themes.googleusercontent.com; object-src 'self'";

    # SSL
    # ssl_certificate "/etc/pki/nginx/<certificate>.crt";
    #ssl_certificate_key "/etc/pki/nginx/<certificate>.key";
    #ssl_session_cache shared:SSL:1m;
    #ssl_session_timeout  10m;
    #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    #ssl_ciphers HIGH:!aNULL:!MD5;
    #ssl_prefer_server_ciphers on;

    proxy_connect_timeout       3600;
    proxy_send_timeout          3600;
    proxy_read_timeout          3600;
    send_timeout                3600;

    location = /examples {
        return 301 /examples/;
    }

    location /examples/ {
        alias /usr/share/nginx/examples/;
        index index.html;
    }

    # Swagger API definitions
    location = /swagger.json {
        proxy_pass http://localhost:8888;
    }

    # API Endpoints, starting with v<number>
    location ~ ^/v\d+/ {
        proxy_pass http://localhost:8888;
    }

    # Redirect /nifi and /workers to /workers/nifi
    location ~ ^/((nifi)|(workers))\/?$ {
        return 301 /workers/nifi/;
    }

    # Reverse proxy for NiFi (if used)
    location ~ ^/workers(?<section>.*) {
            proxy_pass http://127.0.0.1:8000$section$is_args$args;
            proxy_set_header X-ProxyScheme $scheme;
            proxy_set_header X-ProxyPort 80;
            proxy_set_header X-ProxyHost $http_host;
            proxy_set_header X-ProxyContextPath /workers;
    }

    location = /swagger {
        return 301 /swagger/;
    }

    location /swagger/ {
        alias /usr/share/nginx/swagger/;
        index index.html index.htm;
    }

    location / {
        index index.html;
    }

    # Static pages
    # https://github.com/mnemonic-no/act-frontend/blob/master/src/Routing.ts
    location ~ ^/(object-summary/.*|object-fact-query/.*|gremlin/.*|graph-query/.*|multi-object-traverse/.*|chart|search)$ {
        try_files $uri /index.html;
    }
}
